pipeline {
    agent {
        docker { image 'megawin' }
    }
    environment {
        USE_LOCAL_CC65 = 1  // docker has cc65 installed
        WIN_CROSS_BUILD = 1 // we want to build win on linux
        FH_API_KEY = credentials('filehost-api-key')
        FH_ID_DEV_M65LNX = '2b7bd912-1181-447c-a489-223f16b764c1'
        FH_ID_DEV_M65WIN = '658322fd-e586-4b4f-a991-89470b269b4a'
        FH_ID_REL_M65LNX = 'e97f3bf4-9d55-4ae2-a39a-d31dd15e8d34'
        FH_ID_REL_M65WIN = '06c55815-7826-4ad6-be0e-b8dc5e721b6d'
    }
    stages {
        /*
         * make sure we start from a clean slate
         */
        stage('Cleanup') {
            steps {
                sh 'make cleanall'
            }
        }
        /*
         * For a PR branch we build all possible linux and windows targets
         */
        stage ('Full PR Testbuild') {
            when {
                branch pattern: "PR-*"
            }
            steps {
                sh 'make allunix allwin'
            }
        }
        /*
         * For a non PR branch we only build the stuff that goes into a
         * release archive.
         */
        stage('Build Linux Tools') {
            when {
                not { branch pattern: "PR-*" }
            }
            steps {
                sh 'make arcunix'
            }
        }
        stage('Build Windows Tools') {
            when {
                not { branch pattern: "PR-*" }
            }
            steps {
                sh 'make arcwin'
            }
        }
        /*
         * do unittests
         */
        stage('Run build tests') {
            steps {
                sh 'make test'
            }
        }
    }
    post {
        always {
            script {
                /*
                 * only archive artifact for non PR builds
                 */
                if (!env.BRANCH_NAME.startsWith('PR-')) {
                    archiveArtifacts artifacts: "m65tools-*.7z",
                        onlyIfSuccessful: true,
                        fingerprint: true
                }
            }
        }
        success {
            script {
                if (env.BRANCH_NAME == 'development') {
                    sh '''
                    filehost-upload -i ${FH_ID_DEV_M65LNX} -a addversion -V ${BUILD_NUMBER} -I "`git log -1 --pretty=tformat:'dev@%h: %s'`" m65tools-*-linux.7z
                    filehost-upload -i ${FH_ID_DEV_M65WIN} -a addversion -V ${BUILD_NUMBER} -I "`git log -1 --pretty=tformat:'dev@%h: %s'`" m65tools-*-windows.7z
                    '''
                }
                else if (env.BRANCH_NAME == 'master') {
                    sh '''
                    filehost-upload -i ${FH_ID_REL_M65LNX} -a addversion -V ${BUILD_NUMBER} -I "`git log -1 --pretty=tformat:'master@%h: %s'`" m65tools-*-linux.7z
                    filehost-upload -i ${FH_ID_REL_M65WIN} -a addversion -V ${BUILD_NUMBER} -I "`git log -1 --pretty=tformat:'master@%h: %s'`" m65tools-*-windows.7z
                    '''
                }
            }
        }
    }
}
